// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/v1/example/example.proto

package example

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	paging "github.com/flamefatex/grpc-gateway-example/proto/gen/go/common/paging"
	status "github.com/flamefatex/grpc-gateway-example/proto/gen/go/common/status"
	enumeration "github.com/flamefatex/grpc-gateway-example/proto/gen/go/enumeration"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Example 示例
type Example struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 唯一标识
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 类型
	Type enumeration.ExampleType `protobuf:"varint,4,opt,name=type,proto3,enum=flamefatex.grpc_gateway_example.enumeration.ExampleType" json:"type,omitempty"`
	// 描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 创建时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 更新时间
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *Example) Reset() {
	*x = Example{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Example) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Example) ProtoMessage() {}

func (x *Example) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Example.ProtoReflect.Descriptor instead.
func (*Example) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{0}
}

func (x *Example) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Example) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Example) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Example) GetType() enumeration.ExampleType {
	if x != nil {
		return x.Type
	}
	return enumeration.ExampleType(0)
}

func (x *Example) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Example) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Example) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// ExampleListRequest 查询示例列表请求
type ExampleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页
	Paging *paging.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// ID
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ExampleListRequest) Reset() {
	*x = ExampleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleListRequest) ProtoMessage() {}

func (x *ExampleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleListRequest.ProtoReflect.Descriptor instead.
func (*ExampleListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{1}
}

func (x *ExampleListRequest) GetPaging() *paging.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ExampleListRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExampleListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ExampleListResponse 查询示例列表响应
type ExampleListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求ID
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 请求状态
	Status *status.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 分页
	Paging *paging.Paging `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	// 示例列表
	Examples []*Example `protobuf:"bytes,4,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *ExampleListResponse) Reset() {
	*x = ExampleListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleListResponse) ProtoMessage() {}

func (x *ExampleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleListResponse.ProtoReflect.Descriptor instead.
func (*ExampleListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{2}
}

func (x *ExampleListResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ExampleListResponse) GetStatus() *status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExampleListResponse) GetPaging() *paging.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ExampleListResponse) GetExamples() []*Example {
	if x != nil {
		return x.Examples
	}
	return nil
}

// ExampleGetRequest 查询单个示例请求
type ExampleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 唯一标识
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ExampleGetRequest) Reset() {
	*x = ExampleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleGetRequest) ProtoMessage() {}

func (x *ExampleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleGetRequest.ProtoReflect.Descriptor instead.
func (*ExampleGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{3}
}

func (x *ExampleGetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// ExampleGetResponse 查询单个示例响应
type ExampleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求ID
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 请求状态
	Status *status.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 示例
	Example *Example `protobuf:"bytes,3,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *ExampleGetResponse) Reset() {
	*x = ExampleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleGetResponse) ProtoMessage() {}

func (x *ExampleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleGetResponse.ProtoReflect.Descriptor instead.
func (*ExampleGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{4}
}

func (x *ExampleGetResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ExampleGetResponse) GetStatus() *status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExampleGetResponse) GetExample() *Example {
	if x != nil {
		return x.Example
	}
	return nil
}

// ExampleCreateRequest 创建示例请求
type ExampleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 示例
	Example *Example `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *ExampleCreateRequest) Reset() {
	*x = ExampleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleCreateRequest) ProtoMessage() {}

func (x *ExampleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleCreateRequest.ProtoReflect.Descriptor instead.
func (*ExampleCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{5}
}

func (x *ExampleCreateRequest) GetExample() *Example {
	if x != nil {
		return x.Example
	}
	return nil
}

// ExampleCreateResponse 创建示例响应
type ExampleCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求ID
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 请求状态
	Status *status.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ExampleCreateResponse) Reset() {
	*x = ExampleCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleCreateResponse) ProtoMessage() {}

func (x *ExampleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleCreateResponse.ProtoReflect.Descriptor instead.
func (*ExampleCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{6}
}

func (x *ExampleCreateResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ExampleCreateResponse) GetStatus() *status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ExampleUpdateRequest 更新示例请求
type ExampleUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 示例
	Example *Example `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *ExampleUpdateRequest) Reset() {
	*x = ExampleUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleUpdateRequest) ProtoMessage() {}

func (x *ExampleUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleUpdateRequest.ProtoReflect.Descriptor instead.
func (*ExampleUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{7}
}

func (x *ExampleUpdateRequest) GetExample() *Example {
	if x != nil {
		return x.Example
	}
	return nil
}

// ExampleUpdateResponse 更新示例响应
type ExampleUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求ID
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 请求状态
	Status *status.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ExampleUpdateResponse) Reset() {
	*x = ExampleUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleUpdateResponse) ProtoMessage() {}

func (x *ExampleUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleUpdateResponse.ProtoReflect.Descriptor instead.
func (*ExampleUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{8}
}

func (x *ExampleUpdateResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ExampleUpdateResponse) GetStatus() *status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ExampleDeleteRequest 删除示例请求
type ExampleDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 唯一标识
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ExampleDeleteRequest) Reset() {
	*x = ExampleDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleDeleteRequest) ProtoMessage() {}

func (x *ExampleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleDeleteRequest.ProtoReflect.Descriptor instead.
func (*ExampleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{9}
}

func (x *ExampleDeleteRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// ExampleDeleteResponse 删除示例响应
type ExampleDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求ID
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 请求状态
	Status *status.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ExampleDeleteResponse) Reset() {
	*x = ExampleDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_example_example_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleDeleteResponse) ProtoMessage() {}

func (x *ExampleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_example_example_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleDeleteResponse.ProtoReflect.Descriptor instead.
func (*ExampleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_example_example_proto_rawDescGZIP(), []int{10}
}

func (x *ExampleDeleteResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ExampleDeleteResponse) GetStatus() *status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_api_v1_example_example_proto protoreflect.FileDescriptor

var file_api_v1_example_example_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e,
	0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x02, 0x0a, 0x07, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65,
	0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x6c,
	0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xaf,
	0x02, 0x0a, 0x13, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74,
	0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66,
	0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x08, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x22, 0x37, 0x0a, 0x11, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x72, 0x09, 0x3a, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x12, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66,
	0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5b, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x8d,
	0x01, 0x0a, 0x15, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66,
	0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73,
	0x0a, 0x14, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66,
	0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x66,
	0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x72, 0x09,
	0x3a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x8d, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65,
	0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0x9a, 0x07, 0x0a, 0x0e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x2e, 0x66, 0x6c,
	0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0xa9, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x41, 0x2e, 0x66, 0x6c, 0x61,
	0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e,
	0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x12, 0xb8,
	0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x44, 0x2e, 0x66, 0x6c, 0x61, 0x6d,
	0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x45, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x44, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65,
	0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x66, 0x6c, 0x61,
	0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x1a, 0x16, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x44, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74,
	0x65, 0x78, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0xe0, 0x02, 0x0a,
	0x32, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x42, 0x0c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x66, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0xa2, 0x02, 0x05, 0x46, 0x47,
	0x41, 0x56, 0x45, 0xaa, 0x02, 0x2c, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0xca, 0x02, 0x2c, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x5c,
	0x47, 0x72, 0x70, 0x63, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0xe2, 0x02, 0x38, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x5c, 0x47,
	0x72, 0x70, 0x63, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x30, 0x46,
	0x6c, 0x61, 0x6d, 0x65, 0x66, 0x61, 0x74, 0x65, 0x78, 0x3a, 0x3a, 0x47, 0x72, 0x70, 0x63, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x3a, 0x41,
	0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_example_example_proto_rawDescOnce sync.Once
	file_api_v1_example_example_proto_rawDescData = file_api_v1_example_example_proto_rawDesc
)

func file_api_v1_example_example_proto_rawDescGZIP() []byte {
	file_api_v1_example_example_proto_rawDescOnce.Do(func() {
		file_api_v1_example_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_example_example_proto_rawDescData)
	})
	return file_api_v1_example_example_proto_rawDescData
}

var file_api_v1_example_example_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v1_example_example_proto_goTypes = []interface{}{
	(*Example)(nil),               // 0: flamefatex.grpc_gateway_example.api.v1.example.Example
	(*ExampleListRequest)(nil),    // 1: flamefatex.grpc_gateway_example.api.v1.example.ExampleListRequest
	(*ExampleListResponse)(nil),   // 2: flamefatex.grpc_gateway_example.api.v1.example.ExampleListResponse
	(*ExampleGetRequest)(nil),     // 3: flamefatex.grpc_gateway_example.api.v1.example.ExampleGetRequest
	(*ExampleGetResponse)(nil),    // 4: flamefatex.grpc_gateway_example.api.v1.example.ExampleGetResponse
	(*ExampleCreateRequest)(nil),  // 5: flamefatex.grpc_gateway_example.api.v1.example.ExampleCreateRequest
	(*ExampleCreateResponse)(nil), // 6: flamefatex.grpc_gateway_example.api.v1.example.ExampleCreateResponse
	(*ExampleUpdateRequest)(nil),  // 7: flamefatex.grpc_gateway_example.api.v1.example.ExampleUpdateRequest
	(*ExampleUpdateResponse)(nil), // 8: flamefatex.grpc_gateway_example.api.v1.example.ExampleUpdateResponse
	(*ExampleDeleteRequest)(nil),  // 9: flamefatex.grpc_gateway_example.api.v1.example.ExampleDeleteRequest
	(*ExampleDeleteResponse)(nil), // 10: flamefatex.grpc_gateway_example.api.v1.example.ExampleDeleteResponse
	(enumeration.ExampleType)(0),  // 11: flamefatex.grpc_gateway_example.enumeration.ExampleType
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*paging.Paging)(nil),         // 13: flamefatex.grpc_gateway_example.common.paging.Paging
	(*status.ResponseStatus)(nil), // 14: flamefatex.grpc_gateway_example.common.status.ResponseStatus
}
var file_api_v1_example_example_proto_depIdxs = []int32{
	11, // 0: flamefatex.grpc_gateway_example.api.v1.example.Example.type:type_name -> flamefatex.grpc_gateway_example.enumeration.ExampleType
	12, // 1: flamefatex.grpc_gateway_example.api.v1.example.Example.create_time:type_name -> google.protobuf.Timestamp
	12, // 2: flamefatex.grpc_gateway_example.api.v1.example.Example.update_time:type_name -> google.protobuf.Timestamp
	13, // 3: flamefatex.grpc_gateway_example.api.v1.example.ExampleListRequest.paging:type_name -> flamefatex.grpc_gateway_example.common.paging.Paging
	14, // 4: flamefatex.grpc_gateway_example.api.v1.example.ExampleListResponse.status:type_name -> flamefatex.grpc_gateway_example.common.status.ResponseStatus
	13, // 5: flamefatex.grpc_gateway_example.api.v1.example.ExampleListResponse.paging:type_name -> flamefatex.grpc_gateway_example.common.paging.Paging
	0,  // 6: flamefatex.grpc_gateway_example.api.v1.example.ExampleListResponse.examples:type_name -> flamefatex.grpc_gateway_example.api.v1.example.Example
	14, // 7: flamefatex.grpc_gateway_example.api.v1.example.ExampleGetResponse.status:type_name -> flamefatex.grpc_gateway_example.common.status.ResponseStatus
	0,  // 8: flamefatex.grpc_gateway_example.api.v1.example.ExampleGetResponse.example:type_name -> flamefatex.grpc_gateway_example.api.v1.example.Example
	0,  // 9: flamefatex.grpc_gateway_example.api.v1.example.ExampleCreateRequest.example:type_name -> flamefatex.grpc_gateway_example.api.v1.example.Example
	14, // 10: flamefatex.grpc_gateway_example.api.v1.example.ExampleCreateResponse.status:type_name -> flamefatex.grpc_gateway_example.common.status.ResponseStatus
	0,  // 11: flamefatex.grpc_gateway_example.api.v1.example.ExampleUpdateRequest.example:type_name -> flamefatex.grpc_gateway_example.api.v1.example.Example
	14, // 12: flamefatex.grpc_gateway_example.api.v1.example.ExampleUpdateResponse.status:type_name -> flamefatex.grpc_gateway_example.common.status.ResponseStatus
	14, // 13: flamefatex.grpc_gateway_example.api.v1.example.ExampleDeleteResponse.status:type_name -> flamefatex.grpc_gateway_example.common.status.ResponseStatus
	1,  // 14: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.List:input_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleListRequest
	3,  // 15: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Get:input_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleGetRequest
	5,  // 16: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Create:input_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleCreateRequest
	7,  // 17: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Update:input_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleUpdateRequest
	9,  // 18: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Delete:input_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleDeleteRequest
	2,  // 19: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.List:output_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleListResponse
	4,  // 20: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Get:output_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleGetResponse
	6,  // 21: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Create:output_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleCreateResponse
	8,  // 22: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Update:output_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleUpdateResponse
	10, // 23: flamefatex.grpc_gateway_example.api.v1.example.ExampleService.Delete:output_type -> flamefatex.grpc_gateway_example.api.v1.example.ExampleDeleteResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1_example_example_proto_init() }
func file_api_v1_example_example_proto_init() {
	if File_api_v1_example_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_example_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Example); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_example_example_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_example_example_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_example_example_proto_goTypes,
		DependencyIndexes: file_api_v1_example_example_proto_depIdxs,
		MessageInfos:      file_api_v1_example_example_proto_msgTypes,
	}.Build()
	File_api_v1_example_example_proto = out.File
	file_api_v1_example_example_proto_rawDesc = nil
	file_api_v1_example_example_proto_goTypes = nil
	file_api_v1_example_example_proto_depIdxs = nil
}
