syntax = "proto3";

package flamefatex.grpc_gateway_example.api.v1.example;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

import  "common/paging/paging.proto";
import  "common/status/status.proto";
import  "enumeration/example.proto";

// ExampleService 示例服务
service ExampleService {
    // List 查询示例列表
    rpc List(ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            get: "/api/v1/example/list"
        };
    }

    // Get 查询单个示例
    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/api/v1/example/get"
        };
    }

    // Create 创建示例
    rpc Create(CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/api/v1/example/create"
            body: "*"
        };
    }

    // Update 更新示例
    rpc Update(UpdateRequest) returns (UpdateResponse) {
        option (google.api.http) = {
            put: "/api/v1/example/update"
            body: "*"
        };
    }

    // Delete 删除示例
    rpc Delete (DeleteRequest) returns (DeleteResponse) {
        option (google.api.http) = {
            delete: "/api/v1/example/delete"
        };
    }

    // TestCustomHttp 测试自定义http
    rpc TestCustomHttp(TestCustomHttpRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/v1/example/testCustomHttp"
        };
    }

    // TestError 测试错误
    rpc TestError(TestErrorRequest) returns (TestErrorResponse) {
        option (google.api.http) = {
            get: "/api/v1/example/testError"
        };
    }
}

// Example示例
message Example{
    string id = 1; // id
    string name = 2; // 名称
    flamefatex.grpc_gateway_example.enumeration.ExampleType type = 3; // 类型
    string description = 4; // 描述
    google.protobuf.Timestamp created_at = 5; // 创建时间
    google.protobuf.Timestamp updated_at = 6; // 更新时间
}

// ListRequest 查询示例列表请求
message ListRequest {
    flamefatex.grpc_gateway_example.common.paging.Paging paging = 1; // 分页
    string id = 2;  // id
    string name = 3; // 名称
}

// ListResponse 查询示例列表响应
message ListResponse {
    string request_id = 1; // 请求id
    flamefatex.grpc_gateway_example.common.status.Status status = 2; // 请求状态
    flamefatex.grpc_gateway_example.common.paging.Paging paging = 3; // 分页
    repeated Example examples = 4;  // 示例列表
}

// GetRequest 查询单个示例请求
message GetRequest {
    string id = 1 [(validate.rules).string.prefix = "example"]; // id
}

// GetResponse 查询单个示例响应
message GetResponse {
    string request_id = 1;  // 请求id
    flamefatex.grpc_gateway_example.common.status.Status status = 2;  // 请求状态
    Example example = 3; // 示例
}

// CreateRequest 创建示例请求
message CreateRequest {
    Example example = 1 [(validate.rules).message.required = true]; // 示例
}

// CreateResponse 创建示例响应
message CreateResponse {
    string request_id = 1;  // 请求id
    flamefatex.grpc_gateway_example.common.status.Status status = 2;  // 请求状态
}

// UpdateRequest 更新示例请求
message UpdateRequest {
    Example example = 1 [(validate.rules).message.required = true]; // 示例
}

// UpdateResponse 更新示例响应
message UpdateResponse {
    string request_id = 1;  // 请求id
    flamefatex.grpc_gateway_example.common.status.Status status = 2;  // 请求状态
}

// DeleteRequest 删除示例请求
message DeleteRequest {
    string id = 1 [(validate.rules).string.prefix = "example"]; // id
}

// DeleteResponse 删除示例响应
message DeleteResponse {
    string request_id = 1;  // 请求id
    flamefatex.grpc_gateway_example.common.status.Status status = 2;  // 请求状态
}

// TestCustomHttpRequest 测试自定义http
message TestCustomHttpRequest{
    string code = 1;  // http status code
}

// TestErrorRequest 测试错误单个示例请求
message TestErrorRequest {

}

// TestErrorResponse 测试错误单个示例响应
message TestErrorResponse {
    string request_id = 1;   // 请求id
    flamefatex.grpc_gateway_example.common.status.Status status = 2; // 请求状态
    Example example = 3;   // 示例
}